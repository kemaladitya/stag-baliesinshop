{"version":3,"file":"components/general.js","sources":["webpack:///./components/General.js"],"sourcesContent":["export default {\n  get_list_products: async (self, data) => {\n    try {\n      // console.log('*** get_product method ***')\n\n      const request = await self.dispatch('request', {\n        url: '/api/products',\n        method: 'post',\n        data\n      })\n\n      if (request.data.status) {\n        // console.log(request.data.results, ' request.data.results')\n        self.dispatch('setState', {\n          payload: {\n            key: 'products',\n            data: request.data.results.sort((a, b) => b.priority - a.priority)\n          }\n        })\n\n        // console.log(request.data, ' request.data')\n\n        return true\n      }\n\n      return request.data\n    } catch (e) {\n      console.log(e)\n\n      return e\n    }\n  },\n\n  cart_detail: async (self, data) => {\n    try {\n      const request = await self.dispatch('request', {\n        url: '/cache/cart',\n        method: 'post',\n        data\n      })\n      const cart =  request.data\n\n      console.log(cart, ' cart full')\n\n      if (cart && cart.status && cart.results) {\n        if (cart.results.type === 'single-order') {\n          if (cart.results.items.length) {\n            const list_cart = cart.results.items.map(el => {\n              console.log(el.items, ' el items')\n              console.log(self.state, ' self.state.list_product')\n              const search_product = self.state.products.filter(\n                prod => prod.id === el.items[0].id\n              )\n\n              console.log(search_product, ' search_product')\n\n              if (search_product.length) {\n                search_product[0].select_date = true\n                search_product[0].qty = el.items[0].qty\n\n                return search_product[0]\n              }\n            })\n            const cleaned_cart = list_cart.filter(el => typeof el == 'object')\n\n            console.log(cleaned_cart, ' cleaned_cart')\n\n            self.dispatch('setState', {\n              payload: {\n                key: 'cart',\n                data: cleaned_cart\n              }\n            })\n          }\n\n          self.dispatch('setState', {\n            payload: {\n              key: 'notes',\n              data: cart.results.notes\n            }\n          })\n        }\n\n        if (cart.results.type === 'rp-order') {\n          console.log(cart.results, ' cart.results')\n          if (cart.results.items.length) {\n            const list_dates = cart.results.items.map(el => {\n              const list_items = el.items.map(item => {\n                const search_product = self.state.products.filter(prod => {\n                  console.log(prod, ' prod get cart')\n                  console.log(el, ' variant get cart')\n                  if (prod.id === item.id) {\n                    return prod\n                  }\n                })\n                console.log(search_product, item, el)\n                console.log('search_product, item, el')\n                const _item = {\n                  SKU: search_product[0].SKU,\n                  detail_id: search_product[0].detail[0].detail_id,\n                  discount_price: search_product[0].detail[0].discount_price,\n                  id: search_product[0].id,\n                  main_image: search_product[0].detail[0].main_image,\n                  name: search_product[0].name,\n                  normal_price: search_product[0].detail[0].normal_price,\n                  product_id: search_product[0].id,\n                  qty: item.qty,\n                  select_date: true,\n                  variant: search_product[0].detail[0].variant\n                }\n\n                return _item\n              })\n              \n                const merge_items = self.state.products.map(el => {\n                  const find_selected = list_items.filter(s_el => s_el.id == el.id)\n\n                  if (find_selected.length) return find_selected[0]\n\n                  const _item = {\n                    SKU: el.SKU,\n                    detail_id: el.detail[0].detail_id,\n                    discount_price: el.detail[0].discount_price,\n                    id: el.id,\n                    main_image: el.detail[0].main_image,\n                    name: el.name,\n                    normal_price: el.detail[0].normal_price,\n                    product_id: el.id,\n                    qty: 0,\n                    select_date: false,\n                    variant: el.detail[0].variant\n                  }\n\n                  return _item\n                })\n\n                return {\n                  date: el.delivery_date,\n                  delivery_time: el.delivery_time,\n                  items: merge_items\n                }\n            })\n\n            console.log(list_dates, ' list_dates')\n\n            self.dispatch('setState', {\n              payload: {\n                key: 'dates',\n                data: list_dates\n              }\n            })\n\n            self.dispatch('setState', {\n              payload: {\n                key: 'rp_order',\n                data: true\n              }\n            })\n          }\n\n          self.dispatch('setState', {\n            payload: {\n              key: 'notes',\n              data: cart.results.notes\n            }\n          })\n        }\n      }\n      // const request = await self.dispatch('request', {\n      //   url: '/cache/cart',\n      //   method: 'post',\n      //   data\n      // })\n      return request.data\n    } catch (error) {\n      // console.log(error)\n    }\n  },\n\n  manage_cart: async (self, data) => {\n    try {\n      console.log('@manage.cart')\n      console.log('manage_cart', JSON.stringify(data, null, 2))\n      const request = await self.dispatch('request', {\n        url: '/cache/manage/cart',\n        method: 'post',\n        data\n      })\n\n      if ('status' in request) {\n        return request\n      } else {\n        console.log('@cart_request_failed |', request)\n        return {\n          status : 404,\n          data   : { status: false }\n        }\n      }\n    } catch (error) {\n      console.log('@manage_cart |', error)\n    }\n  },\n\n  cart_manager: async (self, data) => {\n    const request = await self\n      .$store\n      .dispatch('request', {\n        url   : '/cart',\n        method: 'post',\n        data,\n      })\n\n    console.log('!@cart_manager.request |', request.data)\n\n    if (request.status === 200 && request.data) {\n      self.$store.dispatch('setState', {\n        payload: {\n          key : 'order_type',\n          data: request.data.type || 'single-order'\n        },\n      })\n\n      const order_type = self.$store.state.order_type\n\n      if (order_type === 'single-order') {\n        self.$store.dispatch('setState', {\n          payload: {\n            key : 'cart',\n            data: request.data.items\n          },\n        })\n      } else if (order_type === 'subscription-order') {\n        self.$store.dispatch('setState', {\n          payload: {\n            key : 'subscription_cart',\n            data: request.data.items\n          },\n        })\n      } else if (order_type === 'package-order') {\n        self.$store.dispatch('setState', {\n          payload: {\n            key : 'package_cart',\n            data: request.data.items\n          },\n        })\n      }\n\n      return request.data\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAczPA;;;;A","sourceRoot":""}